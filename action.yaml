name: App type
description: Get App Type
inputs:
  secrets:
    description: Input secrets
    required: false
  branch:
    description: Input Branch
    required: false
outputs:
  git_branch:
    description: 'app type output git_branch'
    value: ${{ steps.app_env_common.outputs.git_branch }}
  slack_web_hook_address:
    description: 'app type output slack_web_hook_address'
    value: ${{ steps.app_env_common.outputs.slack_web_hook_address }}
  sharp_sports_api_token:
    description: 'app type output sharp_sports_api_token'
    value: ${{ steps.app_env_common.outputs.sharp_sports_api_token }}
  sharp_sports_api_token_public:
    description: 'app type output sharp_sports_api_token_public'
    value: ${{ steps.app_env_common.outputs.sharp_sports_api_token_public }}
  send_grid_api_key:
    description: 'app type output send_grid_api_key'
    value: ${{ steps.app_env_common.outputs.send_grid_api_key }}
  getambassador_token:
    description: 'app type output getambassador_token'
    value: ${{ steps.app_env_common.outputs.getambassador_token }}
  getambassador_username:
    description: 'app type output getambassador_username'
    value: ${{ steps.app_env_common.outputs.getambassador_username }}
  twilio_account_sid:
    description: 'app type output twilio_account_sid'
    value: ${{ steps.app_env_common.outputs.twilio_account_sid }}
  twilio_auth_token:
    description: 'app type output twilio_auth_token'
    value: ${{ steps.app_env_common.outputs.twilio_auth_token }}
  sentry_dsn:
    description: 'app type output sentry_dsn'
    value: ${{ steps.app_env_common.outputs.sentry_dsn }}
  gcp_project:
    description: 'app type output gcp_project'
    value: ${{ steps.app_env.outputs.gcp_project }}
  gcp_region:
    description: 'app type output gcp_region'
    value: ${{ steps.app_env.outputs.gcp_region }}
  gcp_sa:
    description: 'app type output gcp_sa'
    value: ${{ steps.app_env.outputs.gcp_sa }}
  gcp_wip:
    description: 'app type output gcp_wip'
    value: ${{ steps.app_env.outputs.gcp_wip }}
  name:
    description: 'app type output name'
    value: ${{ steps.app_env_common.outputs.name }}
  app_type:
    description: 'app type output app_type'
    value: ${{ steps.app_env_common.outputs.app_type }}
  db_host_replica:
    description: 'app type output db_host_replica'
    value: ${{ steps.app_env_common.outputs.db_host_replica }}
  db_host:
    description: 'app type output db_host'
    value: ${{ steps.app_env_common.outputs.db_host }}
  db_username:
    description: 'app type output db_username'
    value: ${{ steps.app_env_common.outputs.db_username }}
  db_password:
    description: 'app type output db_password'
    value: ${{ steps.app_env_common.outputs.db_password }}
  db_database:
    description: 'app type output db_database'
    value: ${{ steps.app_env_common.outputs.db_database }}
  systemNodePoolMachineType:
    description: 'app type output systemNodePoolMachineType'
    value: ${{ steps.app_env_common.outputs.systemNodePoolMachineType }}
  memoryWorkerNodePoolMachineType:
    description: 'app type output memoryWorkerNodePoolMachineType'
    value: ${{ steps.app_env_common.outputs.memoryWorkerNodePoolMachineType }}
  hive_text_api_token:
    description: 'app type outputhive_text_api_token'
    value: ${{ steps.app_env_common.outputs.hive_text_api_token }}
  hive_image_api_token:
    description: 'app type output hive_image_api_token'
    value: ${{ steps.app_env_common.outputs.hive_image_api_token }}
  github_client_id:
    description: 'Github oauth client id'
    value: ${{ steps.app_env_common.outputs.github_client_id }}
  github_client_secret:
    description: 'Github oauth client secret'
    value: ${{ steps.app_env_common.outputs.github_client_secret }}

runs:
  using: "composite"
  steps:
    - name: Extract branch name
      shell: bash
      run: |
        branch="${{ inputs.branch }}"
        if [[ $branch == "" ]]; then
          echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT
        else 
          echo "branch=$(echo $branch)" >> $GITHUB_OUTPUT
        fi
      id: extract_branch

    - name: set common envs
      id: app_env_common
      shell: bash
      run: |
        git_branch="${{ steps.extract_branch.outputs.branch }}"
        echo "GIT_BRANCH=${git_branch}" >> $GITHUB_ENV
        echo "git_branch=$(echo $git_branch)" >> $GITHUB_OUTPUT

        name="${{ fromJson(inputs.secrets).NAME }}"
        echo "NAME=${name}" >> $GITHUB_ENV
        echo "name=$(echo $name)" >> $GITHUB_OUTPUT
        
        gcp_region="${{ fromJson(inputs.secrets).GCP_REGION }}"
        echo "GCP_REGION=${gcp_region}" >> $GITHUB_ENV
        echo "gcp_region=$(echo $gcp_region)" >> $GITHUB_OUTPUT
        
        slack_web_hook_address="${{ fromJson(inputs.secrets).SLACK_WEB_HOOK_ADDRESS }}"
        echo "SLACK_WEB_HOOK_ADDRESS=${slack_web_hook_address}" >> $GITHUB_ENV
        echo "slack_web_hook_address=$(echo $slack_web_hook_address)" >> $GITHUB_OUTPUT
        
        sharp_sports_api_token="${{ fromJson(inputs.secrets).SHARP_SPORTS_API_TOKEN }}"
        echo "SHARP_SPORTS_API_TOKEN=${sharp_sports_api_token}" >> $GITHUB_ENV
        echo "sharp_sports_api_token=$(echo $sharp_sports_api_token)" >> $GITHUB_OUTPUT
        
        send_grid_api_key="${{ fromJson(inputs.secrets).SEND_GRID_API_KEY }}"
        echo "SEND_GRID_API_KEY=${send_grid_api_key}" >> $GITHUB_ENV
        echo "send_grid_api_key=$(echo $send_grid_api_key)" >> $GITHUB_OUTPUT

        hive_text_api_token="${{ fromJson(inputs.secrets).HIVE_TEXT_API_TOKEN }}"
        echo "HIVE_TEXT_API_TOKEN=${hive_text_api_token}" >> $GITHUB_ENV
        echo "hive_text_api_token=$(echo $hive_text_api_token)" >> $GITHUB_OUTPUT

        hive_image_api_token="${{ fromJson(inputs.secrets).HIVE_IMAGE_API_TOKEN }}"
        echo "HIVE_IMAGE_API_TOKEN=${hive_image_api_token}" >> $GITHUB_ENV
        echo "hive_image_api_token=$(echo $hive_image_api_token)" >> $GITHUB_OUTPUT
        
        new_relic_license_key="${{ fromJson(inputs.secrets).NEW_RELIC_LICENSE_KEY }}"
        echo "NEW_RELIC_LICENSE_KEY=${new_relic_license_key}" >> $GITHUB_ENV
        
        sharp_sports_api_token_public="${{ fromJson(inputs.secrets).SHARP_SPORTS_API_TOKEN_PUBLIC }}"
        echo "SHARP_SPORTS_API_TOKEN_PUBLIC=${sharp_sports_api_token_public}" >> $GITHUB_ENV
        echo "sharp_sports_api_token_public=$(echo $sharp_sports_api_token_public)" >> $GITHUB_OUTPUT
        
        getambassador_username="${{ fromJson(inputs.secrets).GETAMBASSADOR_USERNAME }}"
        echo "GETAMBASSADOR_USERNAME=${getambassador_username}" >> $GITHUB_ENV
        echo "getambassador_username=$(echo $getambassador_username)" >> $GITHUB_OUTPUT
        
        getambassador_token="${{ fromJson(inputs.secrets).GETAMBASSADOR_TOKEN }}"
        echo "GETAMBASSADOR_TOKEN=${getambassador_token}" >> $GITHUB_ENV
        echo "getambassador_token=$(echo $getambassador_token)" >> $GITHUB_OUTPUT

        twilio_account_sid="${{ fromJson(inputs.secrets).TWILIO_ACCOUNT_SID }}"
        echo "TWILIO_ACCOUNT_SID=${twilio_account_sid}" >> $GITHUB_ENV
        echo "twilio_account_sid=$(echo $twilio_account_sid)" >> $GITHUB_OUTPUT
        
        twilio_auth_token="${{ fromJson(inputs.secrets).TWILIO_AUTH_TOKEN }}"
        echo "TWILIO_AUTH_TOKEN=${twilio_auth_token}" >> $GITHUB_ENV
        echo "twilio_auth_token=$(echo $twilio_auth_token)" >> $GITHUB_OUTPUT
        
        sentry_dsn="${{ fromJson(inputs.secrets).SENTRY_DSN }}"
        echo "SENTRY_DSN=${sentry_dsn}" >> $GITHUB_ENV
        echo "sentry_dsn=$(echo $sentry_dsn)" >> $GITHUB_OUTPUT

    - name: check app type
      id: app_env
      shell: bash
      run: |
        if [[ "${{ steps.extract_branch.outputs.branch }}" == "alpha" ]]; then
        
          system_node_pool_machine_type="e2-highcpu-4"
          echo "SYSTEM_NODE_POOL_MACHINE_TYPE=${system_node_pool_machine_type}" >> $GITHUB_ENV
          system_node_pool_disc_size=25
          echo "SYSTEM_NODE_POOL_DISC_SIZE=${system_node_pool_disc_size}" >> $GITHUB_ENV
          system_node_pool_disc_type="pd-standard"
          echo "SYSTEM_NODE_POOL_DISC_TYPE=${system_node_pool_disc_type}" >> $GITHUB_ENV
          system_node_pool_spot_type=true
          echo "SYSTEM_NODE_POOL_SPOT_TYPE=${system_node_pool_spot_type}" >> $GITHUB_ENV
        
          application_redis_node_pool_machine_type="n1-standard-2"
          echo "APPLICATION_REDIS_NODE_POOL_MACHINE_TYPE=${application_redis_node_pool_machine_type}" >> $GITHUB_ENV
          application_redis_node_pool_disc_size=25
          echo "APPLICATION_REDIS_NODE_POOL_DISC_SIZE=${application_redis_node_pool_disc_size}" >> $GITHUB_ENV
          application_redis_node_pool_disc_type="pd-standard"
          echo "APPLICATION_REDIS_NODE_POOL_DISC_TYPE=${application_redis_node_pool_disc_type}" >> $GITHUB_ENV
          application_redis_node_pool_spot_type=true
          echo "APPLICATION_REDIS_NODE_POOL_SPOT_TYPE=${application_redis_node_pool_spot_type}" >> $GITHUB_ENV
        
          application_elastic_search_node_pool_machine_type="e2-standard-2"
          echo "APPLICATION_ELASTIC_SEARCH_NODE_POOL_MACHINE_TYPE=${application_elastic_search_node_pool_machine_type}" >> $GITHUB_ENV
          application_elastic_search_node_pool_disc_size=25
          echo "APPLICATION_ELASTIC_SEARCH_NODE_POOL_DISC_SIZE=${application_elastic_search_node_pool_disc_size}" >> $GITHUB_ENV
          application_elastic_search_node_pool_disc_type="pd-standard"
          echo "APPLICATION_ELASTIC_SEARCH_NODE_POOL_DISC_TYPE=${application_elastic_search_node_pool_disc_type}" >> $GITHUB_ENV
          application_elastic_search_node_pool_spot_type=true
          echo "APPLICATION_ELASTIC_SEARCH_NODE_POOL_SPOT_TYPE=${application_elastic_search_node_pool_spot_type}" >> $GITHUB_ENV
        
          application_rabbitmq_node_pool_machine_type="e2-small"
          echo "APPLICATION_RABBITMQ_NODE_POOL_MACHINE_TYPE=${application_rabbitmq_node_pool_machine_type}" >> $GITHUB_ENV
          application_rabbitmq_node_pool_disc_size=25
          echo "APPLICATION_RABBITMQ_NODE_POOL_DISC_SIZE=${application_rabbitmq_node_pool_disc_size}" >> $GITHUB_ENV
          application_rabbitmq_node_pool_disc_type="pd-standard"
          echo "APPLICATION_RABBITMQ_NODE_POOL_DISC_TYPE=${application_rabbitmq_node_pool_disc_type}" >> $GITHUB_ENV
          application_rabbitmq_node_pool_spot_type=true
          echo "APPLICATION_RABBITMQ_NODE_POOL_SPOT_TYPE=${application_rabbitmq_node_pool_spot_type}" >> $GITHUB_ENV
        
          system_ingress_node_pool_machine_type="e2-small"
          echo "SYSTEM_INGRESS_NODE_POOL_MACHINE_TYPE=${system_ingress_node_pool_machine_type}" >> $GITHUB_ENV
          system_ingress_node_pool_disc_size=25
          echo "SYSTEM_INGRESS_NODE_POOL_DISC_SIZE=${system_ingress_node_pool_disc_size}" >> $GITHUB_ENV
          system_ingress_node_pool_disc_type="pd-standard"
          echo "SYSTEM_INGRESS_NODE_POOL_DISC_TYPE=${system_ingress_node_pool_disc_type}" >> $GITHUB_ENV
          system_ingress_node_pool_spot_type=true
          echo "SYSTEM_INGRESS_NODE_POOL_SPOT_TYPE=${system_ingress_node_pool_spot_type}" >> $GITHUB_ENV
        
          memory_worker_node_pool_machine_type="e2-highmem-4"
          echo "MEMORY_WORKER_NODE_POOL_MACHINE_TYPE=${memory_worker_node_pool_machine_type}" >> $GITHUB_ENV
          memory_worker_node_pool_disc_size=25
          echo "MEMORY_WORKER_NODE_POOL_DISC_SIZE=${memory_worker_node_pool_disc_size}" >> $GITHUB_ENV
          memory_worker_node_pool_disc_type="pd-standard"
          echo "MEMORY_WORKER_NODE_POOL_DISC_TYPE=${memory_worker_node_pool_disc_type}" >> $GITHUB_ENV
          memory_worker_node_pool_spot_type=true
          echo "MEMORY_WORKER_NODE_POOL_SPOT_TYPE=${memory_worker_node_pool_spot_type}" >> $GITHUB_ENV
        
          gcp_project="${{ fromJson(inputs.secrets).GCP_PROJECT_DEV }}"
          echo "GCP_PROJECT=${gcp_project}" >> $GITHUB_ENV
          echo "GCP_PROJECT_ID=${gcp_project}" >> $GITHUB_ENV
          echo "gcp_project=$(echo $gcp_project)" >> $GITHUB_OUTPUT
          
          github_client_id="${{ fromJson(inputs.secrets).CLIENT_ID_GITHUB_ALPHA }}"
          echo "GITHUB_CLIENT_ID=${github_client_id}" >> $GITHUB_ENV
          echo "github_client_id=$(echo $github_client_id)" >> $GITHUB_OUTPUT
          
          github_client_secret="${{ fromJson(inputs.secrets).CLIENT_SECRET_GITHUB_ALPHA }}"
          echo "GITHUB_CLIENT_SECRET=${github_client_secret}" >> $GITHUB_ENV
          echo "github_client_secret=$(echo $github_client_secret)" >> $GITHUB_OUTPUT

          gcp_sa="${{ fromJson(inputs.secrets).GCP_SA_DEV }}"
          echo "GCP_SA=${gcp_sa}" >> $GITHUB_ENV
          echo "gcp_sa=$(echo $gcp_sa)" >> $GITHUB_OUTPUT

          gcp_wip="${{ fromJson(inputs.secrets).GCP_WIP_DEV }}"
          echo "GCP_WIP=${gcp_wip}" >> $GITHUB_ENV
          echo "gcp_wip=$(echo $gcp_wip)" >> $GITHUB_OUTPUT
        
          db_host_replica="${{ fromJson(inputs.secrets).DB_HOST_REPLICA_ALPHA }}"
          echo "DB_HOST_REPLICA=${db_host_replica}" >> $GITHUB_ENV
          echo "db_host_replica=$(echo $db_host_replica)" >> $GITHUB_OUTPUT

        
          db_host="${{ fromJson(inputs.secrets).DB_HOST_ALPHA }}"
          echo "DB_HOST=${db_host}" >> $GITHUB_ENV
          echo "db_host=$(echo $db_host)" >> $GITHUB_OUTPUT
        
          db_username="${{ fromJson(inputs.secrets).DB_USERNAME_ALPHA }}"
          echo "DB_USERNAME=${db_username}" >> $GITHUB_ENV
          echo "db_username=$(echo $db_username)" >> $GITHUB_OUTPUT
        
          db_password="${{ fromJson(inputs.secrets).DB_PASSWORD_ALPHA }}"
          echo "DB_PASSWORD=${db_password}" >> $GITHUB_ENV
          echo "db_password=$(echo $db_password)" >> $GITHUB_OUTPUT
        
          db_database="${{ fromJson(inputs.secrets).DB_DATABASE_ALPHA }}"
          echo "DB_DATABASE=${db_database}" >> $GITHUB_ENV
          echo "db_database=$(echo $db_database)" >> $GITHUB_OUTPUT
        
          google_recaptcha_secret_key="${{ fromJson(inputs.secrets).GOOGLE_RECAPTCHA_SECRET_KEY_ALPHA }}"
          echo "GOOGLE_RECAPTCHA_SECRET_KEY=${google_recaptcha_secret_key}" >> $GITHUB_ENV
        
          payment_hashing_token="${{ fromJson(inputs.secrets).PAYMENT_HASHING_TOKEN_ALPHA }}"
          echo "PAYMENT_HASHING_TOKEN=${payment_hashing_token}" >> $GITHUB_ENV
        
          socure_domain="${{ fromJson(inputs.secrets).SOCURE_DOMAIN_ALPHA }}"
          echo "SOCURE_DOMAIN=${socure_domain}" >> $GITHUB_ENV
        
          socure_api_key="${{ fromJson(inputs.secrets).SOCURE_API_KEY_ALPHA }}"
          echo "SOCURE_API_KEY=${socure_api_key}" >> $GITHUB_ENV
        
          intercom_ios_hashing_token="${{ fromJson(inputs.secrets).INTERCOM_IOS_HASHING_TOKEN_ALPHA }}"
          echo "INTERCOM_IOS_HASHING_TOKEN=${intercom_ios_hashing_token}" >> $GITHUB_ENV
        
          intercom_android_hashing_token="${{ fromJson(inputs.secrets).INTERCOM_ANDROID_HASHING_TOKEN_ALPHA }}"
          echo "INTERCOM_ANDROID_HASHING_TOKEN=${intercom_android_hashing_token}" >> $GITHUB_ENV

          app_type="alpha"
          echo "APP_TYPE=${app_type}" >> $GITHUB_ENV
          echo "app_type=$(echo $app_type)" >> $GITHUB_OUTPUT
        fi
        if [[ "${{ steps.extract_branch.outputs.branch }}" == "beta" ]]; then
        
          system_node_pool_machine_type="e2-highcpu-4"
          echo "SYSTEM_NODE_POOL_MACHINE_TYPE=${system_node_pool_machine_type}" >> $GITHUB_ENV
          system_node_pool_disc_size=25
          echo "SYSTEM_NODE_POOL_DISC_SIZE=${system_node_pool_disc_size}" >> $GITHUB_ENV
          system_node_pool_disc_type="pd-standard"
          echo "SYSTEM_NODE_POOL_DISC_TYPE=${system_node_pool_disc_type}" >> $GITHUB_ENV
          system_node_pool_spot_type=true
          echo "SYSTEM_NODE_POOL_SPOT_TYPE=${system_node_pool_spot_type}" >> $GITHUB_ENV
        
          application_redis_node_pool_machine_type="n1-standard-2"
          echo "APPLICATION_REDIS_NODE_POOL_MACHINE_TYPE=${application_redis_node_pool_machine_type}" >> $GITHUB_ENV
          application_redis_node_pool_disc_size=25
          echo "APPLICATION_REDIS_NODE_POOL_DISC_SIZE=${application_redis_node_pool_disc_size}" >> $GITHUB_ENV
          application_redis_node_pool_disc_type="pd-standard"
          echo "APPLICATION_REDIS_NODE_POOL_DISC_TYPE=${application_redis_node_pool_disc_type}" >> $GITHUB_ENV
          application_redis_node_pool_spot_type=true
          echo "APPLICATION_REDIS_NODE_POOL_SPOT_TYPE=${application_redis_node_pool_spot_type}" >> $GITHUB_ENV
        
          application_elastic_search_node_pool_machine_type="e2-standard-2"
          echo "APPLICATION_ELASTIC_SEARCH_NODE_POOL_MACHINE_TYPE=${application_elastic_search_node_pool_machine_type}" >> $GITHUB_ENV
          application_elastic_search_node_pool_disc_size=25
          echo "APPLICATION_ELASTIC_SEARCH_NODE_POOL_DISC_SIZE=${application_elastic_search_node_pool_disc_size}" >> $GITHUB_ENV
          application_elastic_search_node_pool_disc_type="pd-standard"
          echo "APPLICATION_ELASTIC_SEARCH_NODE_POOL_DISC_TYPE=${application_elastic_search_node_pool_disc_type}" >> $GITHUB_ENV
          application_elastic_search_node_pool_spot_type=true
          echo "APPLICATION_ELASTIC_SEARCH_NODE_POOL_SPOT_TYPE=${application_elastic_search_node_pool_spot_type}" >> $GITHUB_ENV
        
          application_rabbitmq_node_pool_machine_type="e2-small"
          echo "APPLICATION_RABBITMQ_NODE_POOL_MACHINE_TYPE=${application_rabbitmq_node_pool_machine_type}" >> $GITHUB_ENV
          application_rabbitmq_node_pool_disc_size=25
          echo "APPLICATION_RABBITMQ_NODE_POOL_DISC_SIZE=${application_rabbitmq_node_pool_disc_size}" >> $GITHUB_ENV
          application_rabbitmq_node_pool_disc_type="pd-standard"
          echo "APPLICATION_RABBITMQ_NODE_POOL_DISC_TYPE=${application_rabbitmq_node_pool_disc_type}" >> $GITHUB_ENV
          application_rabbitmq_node_pool_spot_type=true
          echo "APPLICATION_RABBITMQ_NODE_POOL_SPOT_TYPE=${application_rabbitmq_node_pool_spot_type}" >> $GITHUB_ENV
        
          system_ingress_node_pool_machine_type="e2-small"
          echo "SYSTEM_INGRESS_NODE_POOL_MACHINE_TYPE=${system_ingress_node_pool_machine_type}" >> $GITHUB_ENV
          system_ingress_node_pool_disc_size=25
          echo "SYSTEM_INGRESS_NODE_POOL_DISC_SIZE=${system_ingress_node_pool_disc_size}" >> $GITHUB_ENV
          system_ingress_node_pool_disc_type="pd-standard"
          echo "SYSTEM_INGRESS_NODE_POOL_DISC_TYPE=${system_ingress_node_pool_disc_type}" >> $GITHUB_ENV
          system_ingress_node_pool_spot_type=true
          echo "SYSTEM_INGRESS_NODE_POOL_SPOT_TYPE=${system_ingress_node_pool_spot_type}" >> $GITHUB_ENV
        
          memory_worker_node_pool_machine_type="e2-highmem-4"
          echo "MEMORY_WORKER_NODE_POOL_MACHINE_TYPE=${memory_worker_node_pool_machine_type}" >> $GITHUB_ENV
          memory_worker_node_pool_disc_size=25
          echo "MEMORY_WORKER_NODE_POOL_DISC_SIZE=${memory_worker_node_pool_disc_size}" >> $GITHUB_ENV
          memory_worker_node_pool_disc_type="pd-standard"
          echo "MEMORY_WORKER_NODE_POOL_DISC_TYPE=${memory_worker_node_pool_disc_type}" >> $GITHUB_ENV
          memory_worker_node_pool_spot_type=true
          echo "MEMORY_WORKER_NODE_POOL_SPOT_TYPE=${memory_worker_node_pool_spot_type}" >> $GITHUB_ENV
        
          gcp_project="${{ fromJson(inputs.secrets).GCP_PROJECT_BETA }}"
          echo "GCP_PROJECT=${gcp_project}" >> $GITHUB_ENV
          echo "GCP_PROJECT_ID=${gcp_project}" >> $GITHUB_ENV
          echo "gcp_project=$(echo $gcp_project)" >> $GITHUB_OUTPUT

          github_client_id="${{ fromJson(inputs.secrets).CLIENT_ID_GITHUB_BETA }}"
          echo "GITHUB_CLIENT_ID=${github_client_id}" >> $GITHUB_ENV
          echo "github_client_id=$(echo $github_client_id)" >> $GITHUB_OUTPUT
        
          github_client_secret="${{ fromJson(inputs.secrets).CLIENT_SECRET_GITHUB_BETA }}"
          echo "GITHUB_CLIENT_SECRET=${github_client_secret}" >> $GITHUB_ENV
          echo "github_client_secret=$(echo $github_client_secret)" >> $GITHUB_OUTPUT
        
          gcp_sa="${{ fromJson(inputs.secrets).GCP_SA_BETA }}"
          echo "GCP_SA=${gcp_sa}" >> $GITHUB_ENV
          echo "gcp_sa=$(echo $gcp_sa)" >> $GITHUB_OUTPUT

          gcp_wip="${{ fromJson(inputs.secrets).GCP_WIP_BETA }}"
          echo "GCP_WIP=${gcp_wip}" >> $GITHUB_ENV
          echo "gcp_wip=$(echo $gcp_wip)" >> $GITHUB_OUTPUT
        
          db_host_replica="${{ fromJson(inputs.secrets).DB_HOST_REPLICA_BETA }}"
          echo "DB_HOST_REPLICA=${db_host_replica}" >> $GITHUB_ENV
          echo "db_host_replica=$(echo $db_host_replica)" >> $GITHUB_OUTPUT
        
          db_host="${{ fromJson(inputs.secrets).DB_HOST_BETA }}"
          echo "DB_HOST=${db_host}" >> $GITHUB_ENV
          echo "db_host=$(echo $db_host)" >> $GITHUB_OUTPUT
        
          db_username="${{ fromJson(inputs.secrets).DB_USERNAME_BETA }}"
          echo "DB_USERNAME=${db_username}" >> $GITHUB_ENV
          echo "db_username=$(echo $db_username)" >> $GITHUB_OUTPUT
        
          db_password="${{ fromJson(inputs.secrets).DB_PASSWORD_BETA }}"
          echo "DB_PASSWORD=${db_password}" >> $GITHUB_ENV
          echo "db_password=$(echo $db_password)" >> $GITHUB_OUTPUT
        
          db_database="${{ fromJson(inputs.secrets).DB_DATABASE_BETA }}"
          echo "DB_DATABASE=${db_database}" >> $GITHUB_ENV
          echo "db_database=$(echo $db_database)" >> $GITHUB_OUTPUT

          google_recaptcha_secret_key="${{ fromJson(inputs.secrets).GOOGLE_RECAPTCHA_SECRET_KEY_BETA }}"
          echo "GOOGLE_RECAPTCHA_SECRET_KEY=${google_recaptcha_secret_key}" >> $GITHUB_ENV

          payment_hashing_token="${{ fromJson(inputs.secrets).PAYMENT_HASHING_TOKEN_ALPHA }}"
          echo "PAYMENT_HASHING_TOKEN=${payment_hashing_token}" >> $GITHUB_ENV
        
        
          socure_domain="${{ fromJson(inputs.secrets).SOCURE_DOMAIN_ALPHA }}"
          echo "SOCURE_DOMAIN=${socure_domain}" >> $GITHUB_ENV
        
          socure_api_key="${{ fromJson(inputs.secrets).SOCURE_API_KEY_ALPHA }}"
          echo "SOCURE_API_KEY=${socure_api_key}" >> $GITHUB_ENV
        
          intercom_ios_hashing_token="${{ fromJson(inputs.secrets).INTERCOM_IOS_HASHING_TOKEN_ALPHA }}"
          echo "INTERCOM_IOS_HASHING_TOKEN=${intercom_ios_hashing_token}" >> $GITHUB_ENV
        
          intercom_android_hashing_token="${{ fromJson(inputs.secrets).INTERCOM_ANDROID_HASHING_TOKEN_ALPHA }}"
          echo "INTERCOM_ANDROID_HASHING_TOKEN=${intercom_android_hashing_token}" >> $GITHUB_ENV
        
          app_type="beta"
          echo "APP_TYPE=${app_type}" >> $GITHUB_ENV
          echo "app_type=$(echo $app_type)" >> $GITHUB_OUTPUT
        fi
        if [[ "${{ steps.extract_branch.outputs.branch }}" == "master" ]]; then
        
          system_node_pool_machine_type="e2-highcpu-8"
          echo "SYSTEM_NODE_POOL_MACHINE_TYPE=${system_node_pool_machine_type}" >> $GITHUB_ENV
          system_node_pool_disc_size=30
          echo "SYSTEM_NODE_POOL_DISC_SIZE=${system_node_pool_disc_size}" >> $GITHUB_ENV
          system_node_pool_disc_type="pd-ssd"
          echo "SYSTEM_NODE_POOL_DISC_TYPE=${system_node_pool_disc_type}" >> $GITHUB_ENV
          system_node_pool_spot_type=true
          echo "SYSTEM_NODE_POOL_SPOT_TYPE=${system_node_pool_spot_type}" >> $GITHUB_ENV
        
          application_redis_node_pool_machine_type="e2-highmem-4"
          echo "APPLICATION_REDIS_NODE_POOL_MACHINE_TYPE=${application_redis_node_pool_machine_type}" >> $GITHUB_ENV
          application_redis_node_pool_disc_size=20
          echo "APPLICATION_REDIS_NODE_POOL_DISC_SIZE=${application_redis_node_pool_disc_size}" >> $GITHUB_ENV
          application_redis_node_pool_disc_type="pd-ssd"
          echo "APPLICATION_REDIS_NODE_POOL_DISC_TYPE=${application_redis_node_pool_disc_type}" >> $GITHUB_ENV
          application_redis_node_pool_spot_type=false
          echo "APPLICATION_REDIS_NODE_POOL_SPOT_TYPE=${application_redis_node_pool_spot_type}" >> $GITHUB_ENV
        
          application_elastic_search_node_pool_machine_type="e2-standard-2"
          echo "APPLICATION_ELASTIC_SEARCH_NODE_POOL_MACHINE_TYPE=${application_elastic_search_node_pool_machine_type}" >> $GITHUB_ENV
          application_elastic_search_node_pool_disc_size=20
          echo "APPLICATION_ELASTIC_SEARCH_NODE_POOL_DISC_SIZE=${application_elastic_search_node_pool_disc_size}" >> $GITHUB_ENV
          application_elastic_search_node_pool_disc_type="pd-ssd"
          echo "APPLICATION_ELASTIC_SEARCH_NODE_POOL_DISC_TYPE=${application_elastic_search_node_pool_disc_type}" >> $GITHUB_ENV
          application_elastic_search_node_pool_spot_type=false
          echo "APPLICATION_ELASTIC_SEARCH_NODE_POOL_SPOT_TYPE=${application_elastic_search_node_pool_spot_type}" >> $GITHUB_ENV
        
          application_rabbitmq_node_pool_machine_type="n1-standard-1"
          echo "APPLICATION_RABBITMQ_NODE_POOL_MACHINE_TYPE=${application_rabbitmq_node_pool_machine_type}" >> $GITHUB_ENV
          application_rabbitmq_node_pool_disc_size=20
          echo "APPLICATION_RABBITMQ_NODE_POOL_DISC_SIZE=${application_rabbitmq_node_pool_disc_size}" >> $GITHUB_ENV
          application_rabbitmq_node_pool_disc_type="pd-ssd"
          echo "APPLICATION_RABBITMQ_NODE_POOL_DISC_TYPE=${application_rabbitmq_node_pool_disc_type}" >> $GITHUB_ENV
          application_rabbitmq_node_pool_spot_type=false
          echo "APPLICATION_RABBITMQ_NODE_POOL_SPOT_TYPE=${application_rabbitmq_node_pool_spot_type}" >> $GITHUB_ENV
        
          system_ingress_node_pool_machine_type="e2-small"
          echo "SYSTEM_INGRESS_NODE_POOL_MACHINE_TYPE=${system_ingress_node_pool_machine_type}" >> $GITHUB_ENV
          system_ingress_node_pool_disc_size=100
          echo "SYSTEM_INGRESS_NODE_POOL_DISC_SIZE=${system_ingress_node_pool_disc_size}" >> $GITHUB_ENV
          system_ingress_node_pool_disc_type="pd-ssd"
          echo "SYSTEM_INGRESS_NODE_POOL_DISC_TYPE=${system_ingress_node_pool_disc_type}" >> $GITHUB_ENV
          system_ingress_node_pool_spot_type=false
          echo "SYSTEM_INGRESS_NODE_POOL_SPOT_TYPE=${system_ingress_node_pool_spot_type}" >> $GITHUB_ENV
        
          memory_worker_node_pool_machine_type="e2-highmem-4"
          echo "MEMORY_WORKER_NODE_POOL_MACHINE_TYPE=${memory_worker_node_pool_machine_type}" >> $GITHUB_ENV
          memory_worker_node_pool_disc_size=100
          echo "MEMORY_WORKER_NODE_POOL_DISC_SIZE=${memory_worker_node_pool_disc_size}" >> $GITHUB_ENV
          memory_worker_node_pool_disc_type="pd-ssd"
          echo "MEMORY_WORKER_NODE_POOL_DISC_TYPE=${memory_worker_node_pool_disc_type}" >> $GITHUB_ENV
          memory_worker_node_pool_spot_type=true
          echo "MEMORY_WORKER_NODE_POOL_SPOT_TYPE=${memory_worker_node_pool_spot_type}" >> $GITHUB_ENV
        
        
          gcp_project="${{ fromJson(inputs.secrets).GCP_PROJECT_PROD }}"
          echo "GCP_PROJECT=${gcp_project}" >> $GITHUB_ENV
          echo "GCP_PROJECT_ID=${gcp_project}" >> $GITHUB_ENV
          echo "gcp_project=$(echo $gcp_project)" >> $GITHUB_OUTPUT

          github_client_id="${{ fromJson(inputs.secrets).CLIENT_ID_GITHUB_PROD }}"
          echo "GITHUB_CLIENT_ID=${github_client_id}" >> $GITHUB_ENV
          echo "github_client_id=$(echo $github_client_id)" >> $GITHUB_OUTPUT
        
          github_client_secret="${{ fromJson(inputs.secrets).CLIENT_SECRET_GITHUB_PROD }}"
          echo "GITHUB_CLIENT_SECRET=${github_client_secret}" >> $GITHUB_ENV
          echo "github_client_secret=$(echo $github_client_secret)" >> $GITHUB_OUTPUT
        
          gcp_sa="${{ fromJson(inputs.secrets).GCP_SA_PROD }}"
          echo "GCP_SA=${gcp_sa}" >> $GITHUB_ENV
          echo "gcp_sa=$(echo $gcp_sa)" >> $GITHUB_OUTPUT

          gcp_wip="${{ fromJson(inputs.secrets).GCP_WIP_PROD }}"
          echo "GCP_WIP=${gcp_wip}" >> $GITHUB_ENV
          echo "gcp_wip=$(echo $gcp_wip)" >> $GITHUB_OUTPUT
        
          db_host_replica="${{ fromJson(inputs.secrets).DB_HOST_REPLICA_PROD }}"
          echo "DB_HOST_REPLICA=${db_host_replica}" >> $GITHUB_ENV
          echo "db_host_replica=$(echo $db_host_replica)" >> $GITHUB_OUTPUT
        
          db_host="${{ fromJson(inputs.secrets).DB_HOST_PROD }}"
          echo "DB_HOST=${db_host}" >> $GITHUB_ENV
          echo "db_host=$(echo $db_host)" >> $GITHUB_OUTPUT
        
          db_username="${{ fromJson(inputs.secrets).DB_USERNAME_PROD }}"
          echo "DB_USERNAME=${db_username}" >> $GITHUB_ENV
          echo "db_username=$(echo $db_username)" >> $GITHUB_OUTPUT
        
          db_password="${{ fromJson(inputs.secrets).DB_PASSWORD_PROD }}"
          echo "DB_PASSWORD=${db_password}" >> $GITHUB_ENV
          echo "db_password=$(echo $db_password)" >> $GITHUB_OUTPUT
        
          db_database="${{ fromJson(inputs.secrets).DB_DATABASE_PROD }}"
          echo "DB_DATABASE=${db_database}" >> $GITHUB_ENV
          echo "db_database=$(echo $db_database)" >> $GITHUB_OUTPUT
        
          google_recaptcha_secret_key="${{ fromJson(inputs.secrets).GOOGLE_RECAPTCHA_SECRET_KEY_PROD }}"
          echo "GOOGLE_RECAPTCHA_SECRET_KEY=${google_recaptcha_secret_key}" >> $GITHUB_ENV
        
          payment_hashing_token="${{ fromJson(inputs.secrets).PAYMENT_HASHING_TOKEN_PROD }}"
          echo "PAYMENT_HASHING_TOKEN=${payment_hashing_token}" >> $GITHUB_ENV
        
          socure_domain="${{ fromJson(inputs.secrets).SOCURE_DOMAIN_PROD }}"
          echo "SOCURE_DOMAIN=${socure_domain}" >> $GITHUB_ENV
        
          socure_api_key="${{ fromJson(inputs.secrets).SOCURE_API_KEY_PROD }}"
          echo "SOCURE_API_KEY=${socure_api_key}" >> $GITHUB_ENV
        
          intercom_ios_hashing_token="${{ fromJson(inputs.secrets).INTERCOM_IOS_HASHING_TOKEN_PROD }}"
          echo "INTERCOM_IOS_HASHING_TOKEN=${intercom_ios_hashing_token}" >> $GITHUB_ENV
        
          intercom_android_hashing_token="${{ fromJson(inputs.secrets).INTERCOM_ANDROID_HASHING_TOKEN_PROD }}"
          echo "INTERCOM_ANDROID_HASHING_TOKEN=${intercom_android_hashing_token}" >> $GITHUB_ENV
        
          app_type="prod"
          echo "APP_TYPE=${app_type}" >> $GITHUB_ENV
          echo "app_type=$(echo $app_type)" >> $GITHUB_OUTPUT
        fi
